ll <- NULL
print(ll)
length(ll)
ll <- NULL#
for (i in 1:length(ll)){#
	cat(names(ll)[i])#
	cat(ll[[i]])#
	cat("-")#
}
ll <- list(a=1,b=3)#
for (i in 1:length(ll)){#
	cat(names(ll)[i])#
	cat(ll[[i]])#
	cat("-")#
}
ll <- list(a=1,b=3)#
for (i in 1:length(ll)){#
	cat(names(ll)[i],"=")#
	cat(ll[[i]])#
	if (i != length(ll)){#
		cat(" - ")#
	}#
	cat("\")#
}
ll
ll}
ll)
)
}
)
)"
""
ll <- list(a=1,b=3)#
for (i in 1:length(ll)){#
	cat(names(ll)[i],"=")#
	cat(ll[[i]])#
	if (i != length(ll)){#
		cat(" - ")#
	}#
	cat("\n")#
}
ll <- list(a=1,b=3)#
for (i in 1:length(ll)){#
	cat(names(ll)[i],"=")#
	cat(ll[[i]])#
	if (i != length(ll)){#
		cat(" - ")#
	}#
}#
if (length(ll)>0){#
	cat("\n")#
}
summary.GGItest <- function(x){#
	cat(x$method,"\n")#
	if (is.null(x$df)){#
		cat(names(x$statistic)," = ",x$statistic,", p-value = ",x$p.value,"\n",sep="")#
	} else {#
		cat(names(x$statistic)," = ",x$statistic,", df = ",x$df,", p-value = ",x$p.value,"\n",sep="")	#
		}#
	ll <- x$parameter#
	for (i in 1:length(ll)){#
		cat(names(ll)[i],"=")#
		cat(ll[[i]])#
	if (i != length(ll)){#
		cat(" - ")#
		}#
	}#
}
library(devtools) #
 install_github("MathieuEmily/GeneGeneInteR")#
 library(GeneGeneInteR)
data(gene.pair)
tmp <- PCA.test(Y=gene.pair$Y, G1=gene.pair$G1,G2=gene.pair$G2,threshold=0.7)
tmp
summary(tmp)
tmp
names(tmp)
tmp$parameter
length(tmp$parameter)
summary.GGItest <- function(x){#
	cat(x$method,"\n")#
	if (is.null(x$df)){#
		cat(names(x$statistic)," = ",x$statistic,", p-value = ",x$p.value,"\n",sep="")#
	} else {#
		cat(names(x$statistic)," = ",x$statistic,", df = ",x$df,", p-value = ",x$p.value,"\n",sep="")	#
		}#
	ll <- x$parameter#
	if (!is.null(x$parameter)){#
		for (i in 1:length(ll)){#
			cat(names(ll)[i],"=")#
			cat(ll[[i]])#
			if (i != length(ll)){#
			cat(" - ")#
			}#
		}#
	}#
}
summary(tmp)
require(GeneGeneInteR)
data(gene.pair)#
CCA.test(Y=gene.pair$Y, G1=gene.pair$G1,G2=gene.pair$G2)
data(gene.pair)#
gene.pair$Y
head(gene.pair$Y)
?PCA.test
PCA.test(Y=gene.pair$Y, G1=gene.pair$G1,G2=gene.pair$G2,threshold=0.7,method="GenFreq")
PCA.test(Y=gene.pair$Y, G1=gene.pair$G1,G2=gene.pair$G2,threshold=0.7,method="Std")
set.seed(1234)#
CCA.test(Y=gene.pair$Y, G1=gene.pair$G1,G2=gene.pair$G2,n.boot=500)
?dots
?kcca
set.seed(1234)#
PLSPM.test(Y=gene.pair$Y, G1=gene.pair$G1,G2=gene.pair$G2,n.perm=1000)
set.seed(1234)#
CLD.test(Y=gene.pair$Y, G1=gene.pair$G1,G2=gene.pair$G2,n.perm=2000)
set.seed(1234)#
GBIGM.test(Y=gene.pair$Y, G1=gene.pair$G1,G2=gene.pair$G2,n.perm=2000)
KCCA.test
set.seed(1234)#
minP.test(Y=gene.pair$Y, G1=gene.pair$G1,G2=gene.pair$G2)
set.seed(1234)#
gates.test(Y=gene.pair$Y, G1=gene.pair$G1,G2=gene.pair$G2,alpha=0.05,me.est=c("ChevNy"))
set.seed(1234)#
gates.test(Y=gene.pair$Y, G1=gene.pair$G1,G2=gene.pair$G2,me.est=c("ChevNy"))
set.seed(1234)
gates.test(Y=gene.pair$Y, G1=gene.pair$G1,G2=gene.pair$G2,me.est=c("ChevNy"))
set.seed(1234)#
minP.test(Y=gene.pair$Y, G1=gene.pair$G1,G2=gene.pair$G2)
gates.test(Y=gene.pair$Y, G1=gene.pair$G1,G2=gene.pair$G2,alpha=0.05,me.est=c("Keff"))
gates.test(Y=gene.pair$Y, G1=gene.pair$G1,G2=gene.pair$G2,alpha=0.05,me.est=c("LiJi"))
gates.test(Y=gene.pair$Y, G1=gene.pair$G1,G2=gene.pair$G2,alpha=0.05,me.est=c("Galwey"))
gates.test(Y=gene.pair$Y, G1=gene.pair$G1,G2=gene.pair$G2,me.est=c("ChevNy,Keff"))
gates.test(Y=gene.pair$Y, G1=gene.pair$G1,G2=gene.pair$G2,me.est="ChevNy")
set.seed(1234)#
gates.test(Y=gene.pair$Y, G1=gene.pair$G1,G2=gene.pair$G2,me.est="ChevNy")#
set.seed(1234)#
gates.test(Y=gene.pair$Y, G1=gene.pair$G1,G2=gene.pair$G2,alpha=0.05,me.est="Keff")#
set.seed(1234)#
gates.test(Y=gene.pair$Y, G1=gene.pair$G1,G2=gene.pair$G2,me.est="LiJi")#
set.seed(1234)#
gates.test(Y=gene.pair$Y, G1=gene.pair$G1,G2=gene.pair$G2,me.est="Galwey")
library(devtools)
install_github("MathieuEmily/GeneGeneInteR")
install_github("MathieuEmily/GeneGeneInteR")
install_github("MathieuEmily/GeneGeneInteR")
set.seed(1234)#
tTS.test(Y=gene.pair$Y, G1=gene.pair$G1,G2=gene.pair$G2,tau=0.5,n.sim=500)
set.seed(1234)#
tTS.test(Y=gene.pair$Y, G1=gene.pair$G1,G2=gene.pair$G2,tau=0.5,n.sim=2000)
set.seed(1234)#
tTS.test(Y=gene.pair$Y, G1=gene.pair$G1,G2=gene.pair$G2,tau=0.5,n.sim=2000)
set.seed(1234)#
tTS.test(Y=gene.pair$Y, G1=gene.pair$G1,G2=gene.pair$G2,tau=0.5,n.sim=10000)
set.seed(1234)#
tProd.test(Y=gene.pair$Y, G1=gene.pair$G1,G2=gene.pair$G2,tau=0.5,n.sim=1000)
install_github("MathieuEmily/GeneGeneInteR")
?ImportFile
